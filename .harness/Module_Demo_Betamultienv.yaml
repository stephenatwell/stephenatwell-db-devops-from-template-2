pipeline:
  projectIdentifier: default_project
  orgIdentifier: default
  stages:
    - stage:
        name: DB Migrate
        identifier: DB_Migrate
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - stepGroup:
                  name: Liquibase Update
                  identifier: Liquibase_Update
                  steps:
                    - parallel:
                        - step:
                            type: DBSchemaApply
                            name: Apply To Staging
                            identifier: Apply_To_Staging
                            spec:
                              connectorRef: account.harnessImage
                              resources:
                                limits:
                                  memory: 1.5Gi
                                  cpu: "0.5"
                              dbSchema: db_devops_demo
                              dbInstance: staging
                              tag: <+stage.variables.tag>
                            timeout: 10m
                            when:
                              stageStatus: Success
                              condition: <+pipeline.variables.trigger_branch> == "staging"
                        - step:
                            type: DBSchemaApply
                            name: Apply to Production
                            identifier: Apply_to_Production
                            spec:
                              connectorRef: account.harnessImage
                              resources:
                                limits:
                                  memory: 1.5Gi
                                  cpu: "0.5"
                              dbSchema: db_devops_demo
                              dbInstance: productionus
                              tag: <+stage.variables.tag>
                            timeout: 10m
                            when:
                              stageStatus: Success
                              condition: <+pipeline.variables.trigger_branch> == "production"
                  stepGroupInfra:
                    type: KubernetesDirect
                    spec:
                      connectorRef: k8s_cluster_try_3
                      namespace: yogeshc
                      initTimeout: 10m
                  when:
                    stageStatus: Success
                    condition: <+stage.variables.rollback_tag> == ""
              - stepGroup:
                  name: Liquibase Rollback
                  identifier: Liquibase_Rollback
                  steps:
                    - parallel:
                        - step:
                            type: DBSchemaRollback
                            name: Rollback Staging
                            identifier: Rollback_Staging
                            spec:
                              connectorRef: account.harnessImage
                              resources:
                                limits:
                                  memory: 1.5Gi
                                  cpu: "0.5"
                              dbSchema: db_devops_demo
                              dbInstance: staging
                              tag: <+stage.variables.rollback_tag>
                            timeout: 10m
                            when:
                              stageStatus: Success
                              condition: <+pipeline.variables.trigger_branch> == "staging"
                        - step:
                            type: DBSchemaRollback
                            name: DBSchemaRollback_2
                            identifier: DBSchemaRollback_2
                            spec:
                              connectorRef: account.harnessImage
                              resources:
                                limits:
                                  memory: 1.5Gi
                                  cpu: "0.5"
                              dbSchema: db_devops_demo
                              dbInstance: productionus
                              tag: <+stage.variables.rollback_tag>
                            timeout: 10m
                            when:
                              stageStatus: Success
                              condition: <+pipeline.variables.trigger_branch> == "production"
                  stepGroupInfra:
                    type: KubernetesDirect
                    spec:
                      connectorRef: k8s_cluster_try_3
                      namespace: yogeshc
                      initTimeout: 10m
                  when:
                    stageStatus: Success
                    condition: <+stage.variables.rollback_tag> != ""
            rollbackSteps: []
          serviceDependencies: []
        tags: {}
        failureStrategies:
          - onFailure:
              errors: []
              action:
                type: Abort
        variables:
          - name: rollback_tag
            type: String
            description: Specify this if you wish to rollback to the particular tag
            required: false
            value: <+input>
          - name: branch
            type: String
            description: ""
            required: true
            value: main
          - name: changelogfile
            type: String
            description: ""
            required: false
            value: example-changelog.yaml
          - name: tag
            type: String
            description: Argument to Liquibase Tag Command
            required: false
            value: <+input>
          - name: server_jdbc_url
            type: String
            description: JDBC URL of the target server
            required: false
            value: <+pipeline.variables.server_jdbc_url>
          - name: arch
            type: String
            description: ""
            required: false
            value: latest
  tags:
    demo: ""
  variables:
    - name: server_jdbc_url
      type: String
      description: ""
      required: false
      value: jdbc:sqlserver://<+variable.sql_server_ip_address>;database=MyTestDataBase;trustServerCertificate=true
    - name: user
      type: String
      description: ""
      required: false
      value: <+secrets.getValue("mysql_sa_user")>
    - name: trigger_branch
      type: String
      description: ""
      required: true
      value: <+input>
  identifier: Module_Demo_Betamultienv
  name: Module Demo - Beta-multi-env
